{"version":3,"sources":["assets/images/React.svg","assets/images/Developer-Illust.svg","assets/images/Dimigoin-Mockup.png","assets/images/Echo-Mockup.png","assets/images/Your-Illust.svg","assets/images/Vue.svg","assets/images/Flask.svg","assets/images/Express.svg","assets/images/MongoDB.svg","assets/images/MySQL.svg","assets/images/Git.svg","assets/images/Kotlin.svg","components/Navbar.js","components/Button.js","pages/Home.js","pages/Products.js","pages/Stacks.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","Nav","Brand","ItemWrapper","Item","to","React","Component","styled","nav","h1","ul","span","Button","JButton","disabled","this","props","onClick","children","button","Home","window","location","href","Container","IdentityWrapper","Identity","ButtonWrapper","apply","IllustBox","src","DeveloperIllust","alt","div","img","ProductList","title","description","image","DimigoinImage","imageAlt","EchoImage","YourIllust","Products","prevPage","bind","nextPage","state","currentIdx","setState","length","ProductWrapper","Product","Description","Image","Pagination","StackList","VueLogo","ReactLogo","GitLogo","FlaskLogo","ExpressLogo","MySQLLogo","MongoDBLogo","KotlinLogo","Stacks","StackWrapper","Stack","document","App","FlexContainer","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.76adb4cc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/React.05a3e30f.svg\";","module.exports = __webpack_public_path__ + \"static/media/Developer-Illust.dd3e0489.svg\";","module.exports = __webpack_public_path__ + \"static/media/Dimigoin-Mockup.bcca8a4a.png\";","module.exports = __webpack_public_path__ + \"static/media/Echo-Mockup.1d20ff79.png\";","module.exports = __webpack_public_path__ + \"static/media/Your-Illust.75f71d4d.svg\";","module.exports = __webpack_public_path__ + \"static/media/Vue.9a45fc76.svg\";","module.exports = __webpack_public_path__ + \"static/media/Flask.1fc3bda8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Express.c6bab64b.svg\";","module.exports = __webpack_public_path__ + \"static/media/MongoDB.2985235d.svg\";","module.exports = __webpack_public_path__ + \"static/media/MySQL.f80a91ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/Git.43d302c6.svg\";","module.exports = __webpack_public_path__ + \"static/media/Kotlin.b367d024.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'react-router-dom'\n\nclass Navbar extends React.Component {\n  render () {\n    return (\n      <Nav>\n        <Brand>JnJ Communications</Brand>\n        <div>\n          <ItemWrapper>\n            <Item>Introduce</Item>\n            <Link to=\"/stacks\">\n              <Item>What we used</Item>\n            </Link>\n            <Link to=\"/products\">\n              <Item>What we made</Item>\n            </Link>\n          </ItemWrapper>\n        </div>\n      </Nav>\n    )\n  }\n}\n\nconst Nav = styled.nav`\n  width: 100%;\n  height: 8rem;\n  float: right;\n  display: block;\n\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n\n  @media (max-width: 1100px) {\n    justify-content: center;\n  }\n`\n\nconst Brand = styled.h1`\n  font-family: 'Montserrat', sans-serif !important;\n  font-size: 2rem;\n  position: absolute;\n  left: 70px;\n  user-select: none;\n  letter-spacing: -1px;\n  margin: 0;\n  cursor: default;\n\n  @media (max-width: 1100px) {\n    position: unset;\n  }\n`\n\nconst ItemWrapper = styled.ul`\n  @media (max-width: 1100px) {\n    display: none;\n  }\n`\n\nconst Item = styled.span`\n  font-family: 'Montserrat', sans-serif !important;\n  font-size: 1.3rem;\n  margin-right: 70px;\n  cursor: pointer;\n  user-select: none;\n`\n\nexport default Navbar\n","import React from 'react'\nimport styled from 'styled-components'\n\nclass Button extends React.Component {\n  render () {\n    return (\n      <JButton\n        disabled={this.props.disabled}\n        onClick={this.props.onClick}\n      >\n        {this.props.children}\n      </JButton>\n    )\n  }\n}\n\nconst JButton = styled.button`\n  width: 10rem;\n  height: 3rem;\n  letter-spacing: 0.3rem;\n  background-color: white;\n  font-size: 1rem;\n  border: none;\n  border-radius: 45px;\n  box-shadow: 0px 8px 15px rgba(0, 0, 0, 0.1);\n  transition: all 0.3s ease 0s;\n  outline: none;\n  user-select: none;\n  background-color: #f8f9fa;\n  cursor: ${props => (props.disabled ? 'not-allowed' : 'pointer')};\n\n  ${props => (props.disabled ? ''\n    : `&:hover {\n      background-color: black;\n      box-shadow: 0px 15px 20px rgba(46, 229, 157, 0.4);\n      color: #fff;\n      transform: translateY(-7px);\n    }`)}\n`\n\nexport default Button\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Button from '../components/Button'\n\nimport DeveloperIllust from '../assets/images/Developer-Illust.svg'\n\nclass Home extends React.Component {\n  apply () {\n    window.location.href = 'https://dimigo.in/request/circle'\n  }\n\n  render () {\n    return (\n      <Container>\n        <IdentityWrapper>\n          <Identity>\n            모든 것을\n          </Identity>\n          <Identity>\n            내 마음대로\n          </Identity>\n          <ButtonWrapper>\n            <Button onClick={this.apply}>\n              지원하기\n            </Button>\n          </ButtonWrapper>\n        </IdentityWrapper>\n        <IllustBox\n          src={DeveloperIllust}\n          alt=\"Thingking Code\"\n        />\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  width: 100vw;\n  flex: 1;\n\n  padding: 1rem 2rem;\n  box-sizing: border-box;\n\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n`\n\nconst IllustBox = styled.img`\n  height: 37rem;\n\n  @media (max-width: 900px) {\n    width: 100%;\n    height: auto;\n  }\n`\n\nconst IdentityWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n`\n\nconst Identity = styled.span`\n  word-wrap: break-word;\n  word-break: break-all;\n  font-size: 4.5rem;\n  font-weight: lighter;\n  line-height: 100px;\n  align-items: center;\n`\n\nconst ButtonWrapper = styled.div`\n  margin-top: 20px;\n  padding-top: 20px;\n  border-top: 2.7px solid black;\n`\n\nexport default Home\n","import React from 'react'\nimport styled from 'styled-components'\nimport Button from '../components/Button'\n\n/** Product Logos */\nimport DimigoinImage from '../assets/images/Dimigoin-Mockup.png'\nimport EchoImage from '../assets/images/Echo-Mockup.png'\nimport YourIllust from '../assets/images/Your-Illust.svg'\n\nconst ProductList = [\n  {\n    title: 'DIMIGOIN',\n    // eslint-disable-next-line\n    description: '디미고인은 교내 시스템 전산화 프로젝트로, Vue.js로 작성된 프론트엔드와 Flask로 작성된 백엔드로 구성되어 있습니다.\\\n      Sentry, CircleCI 등 최신 기술을 접해 볼 수 있고, 실무에 준하는 프로젝트 규모로 여러 의미 있는 경험을 해 보실 수 있습니다.',\n    image: DimigoinImage,\n    imageAlt: 'Dimigoin in Macbook'\n  },\n  {\n    title: 'ECHO',\n    // eslint-disable-next-line\n    description: 'ECHO는 교내 SNS 개발 프로젝트로, 전자투표, 학사일정 등 편의기능은 물론 밴드, 페이스북 페이지, 대나무숲 등 여러개로 나누어져 있는\\\n      디미고의 여러 커뮤니티를 통합하기 위해 개발하고 있습니다.',\n    image: EchoImage,\n    imageAlt: 'Echo in Macbook'\n  },\n  {\n    title: '이곳은',\n    // eslint-disable-next-line\n    description: '2020년, 당신을 위해 남겨져 있습니다.\\\n      당신이 기획하고, 디자인하고, 개발해 나갈 공간입니다.',\n    image: YourIllust,\n    imageAlt: 'Your Illust'\n  }\n]\n\nclass Products extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.prevPage = this.prevPage.bind(this)\n    this.nextPage = this.nextPage.bind(this)\n\n    this.state = {\n      currentIdx: 0\n    }\n  }\n\n  prevPage () {\n    if (this.state.currentIdx === 0) return\n\n    this.setState({\n      currentIdx: this.state.currentIdx - 1\n    })\n  }\n\n  nextPage () {\n    if (this.state.currentIdx === ProductList.length - 1) return\n\n    this.setState({\n      currentIdx: this.state.currentIdx + 1\n    })\n  }\n\n  render () {\n    return (\n      <Container>\n        <ProductWrapper>\n          <Product>\n            {ProductList[this.state.currentIdx].title}\n          </Product>\n          <Description>\n            {ProductList[this.state.currentIdx].description}\n          </Description>\n        </ProductWrapper>\n        <Image\n          src={ProductList[this.state.currentIdx].image}\n          alt={ProductList[this.state.currentIdx].imageAlt}\n        />\n        <Pagination>\n          <Button\n            disabled={this.state.currentIdx === 0}\n            onClick={this.prevPage}\n          >\n            이전\n          </Button>\n          <Button\n            disabled={this.state.currentIdx === ProductList.length - 1}\n            onClick={this.nextPage}\n          >\n            다음\n          </Button>\n        </Pagination>\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  width: 100vw;\n  flex: 1;\n\n  padding: 1rem 2rem;\n  box-sizing: border-box;\n\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n  \n  @media (max-width: 805px) {\n    flex-direction: column;\n  }\n`\n\nconst Image = styled.img`\n  width: 50vw;\n\n  @media (max-width: 805px) {\n    display: none;\n  }\n`\n\nconst ProductWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1;\n`\n\nconst Product = styled.span`\n  word-wrap: break-word;\n  word-break: keep-all;\n  font-size: 5rem;\n  align-items: center;\n  font-weight: lighter;\n`\n\nconst Description = styled.span`\n  word-wrap: break-word;\n  word-break: keep-all;\n  margin-top: 19px;\n  font-size: 1.5rem;\n  line-height: 40px;\n  font-weight: lighter;\n  align-items: center;\n`\n\nconst Pagination = styled.div`\n  @media (max-width: 805px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex: 1;\n  }\n\n  @media (min-width: 805px) {\n    position: absolute;\n    bottom: 50px;\n    flex: 1;\n    display: flex;\n  }\n\n  button:first-child {\n    margin-right: 20px;\n  }\n`\n\nexport default Products\n","import React from 'react'\nimport styled from 'styled-components'\nimport Button from '../components/Button'\n\n/** Stack Logos */\nimport VueLogo from '../assets/images/Vue.svg'\nimport ReactLogo from '../assets/images/React.svg'\nimport FlaskLogo from '../assets/images/Flask.svg'\nimport ExpressLogo from '../assets/images/Express.svg'\nimport MongoDBLogo from '../assets/images/MongoDB.svg'\nimport MySQLLogo from '../assets/images/MySQL.svg'\nimport GitLogo from '../assets/images/Git.svg'\nimport KotlinLogo from '../assets/images/Kotlin.svg'\n\nconst StackList = [\n  {\n    title: 'Vue',\n    description: 'Vue는 디미고인과 ECHO에 사용된 프론트엔드 프레임워크입니다. Vuex, Vue-router 등 추가적인 프레임워크도 사용하고 있습니다.',\n    image: VueLogo,\n    imageAlt: 'Vue Logo'\n  },\n  {\n    title: 'React',\n    description: '현재 React로 개발된 프로젝트는 없습니다. 이 랜딩 페이지를 기점으로 2020년 여러 프로젝트를 React로 리팩토링 하는 것을 목표로 하고 있습니다.',\n    image: ReactLogo,\n    imageAlt: 'React Logo'\n  },\n  {\n    title: 'React Native',\n    // eslint-disable-next-line\n    description: '현재 Swift, Kotlin 등 여러 언어로 작성된 모바일 앱을 하나의 프로젝트로 통합하기 위해 도입한 프레임워크입니다.\\\n      현재 디미고인앱을 React Native로 리팩토링하고 있습니다.',\n    image: ReactLogo,\n    imageAlt: 'React Native Logo'\n  },\n  {\n    title: 'Git',\n    // eslint-disable-next-line\n    description: 'Git은 현재 사용하고 있는 분산 버전 관리 시스템으로, 체계화된 협업을 경험해 보실 수 있습니다.\\\n      또한, 자체적인 GitLab 서버를 통해 CI/CD를 구축해 효율적인 배포 시스템을 구현했습니다.',\n    image: GitLogo,\n    imageAlt: 'Git Logo'\n  },\n  {\n    title: 'Flask',\n    description: 'Flask는 현재 디미고인과 ECHO의 RESTful API를 구성하고 있는 백엔드 프레임워크입니다.',\n    image: FlaskLogo,\n    imageAlt: 'Flask Logo'\n  },\n  {\n    title: 'Express',\n    description: 'Express는 Node.js 백엔드 프레임워크입니다. 방과 후 신청 기능 등에 점진적인 도입을 시도해 보고 있습니다.',\n    image: ExpressLogo,\n    imageAlt: 'Express Logo'\n  },\n  {\n    title: 'MySQL',\n    description: 'MySQL은 현재 백엔드 데이터베이스의 대부분을 이루고 있는 DBMS입니다.',\n    image: MySQLLogo,\n    imageAlt: 'MySQL Logo'\n  },\n  {\n    title: 'MongoDB',\n    description: 'MongoDB는 동적 스키마를 지원하는 데이터베이스 시스템입니다. 현재 MySQL이 적용된 ECHO의 API 서버를 MongoDB로 리팩토링하는 것을 목표로 하고 있습니다.',\n    image: MongoDBLogo,\n    imageAlt: 'MongoDB Logo'\n  },\n  {\n    title: 'Kotlin',\n    description: 'Kotlin은 현재 디미고인 안드로이드 앱에 사용된 언어입니다.',\n    image: KotlinLogo,\n    imageAlt: 'Kotlin Logo'\n  }\n]\n\nclass Stacks extends React.Component {\n  constructor (props) {\n    super(props)\n\n    this.prevPage = this.prevPage.bind(this)\n    this.nextPage = this.nextPage.bind(this)\n\n    this.state = {\n      currentIdx: 0\n    }\n  }\n\n  prevPage () {\n    if (this.state.currentIdx === 0) return\n\n    this.setState({\n      currentIdx: this.state.currentIdx - 1\n    })\n  }\n\n  nextPage () {\n    if (this.state.currentIdx === StackList.length - 1) return\n\n    this.setState({\n      currentIdx: this.state.currentIdx + 1\n    })\n  }\n\n  render () {\n    return (\n      <Container>\n        <StackWrapper>\n          <Stack>\n            {StackList[this.state.currentIdx].title}\n          </Stack>\n          <Description>\n            {StackList[this.state.currentIdx].description}\n          </Description>\n        </StackWrapper>\n        <Image\n          src={StackList[this.state.currentIdx].image}\n          alt={StackList[this.state.currentIdx].imageAlt}\n        />\n        <Pagination>\n          <Button\n            disabled={this.state.currentIdx === 0}\n            onClick={this.prevPage}\n          >\n            이전\n          </Button>\n          <Button\n            disabled={this.state.currentIdx === StackList.length - 1}\n            onClick={this.nextPage}\n          >\n            다음\n          </Button>\n        </Pagination>\n      </Container>\n    )\n  }\n}\n\nconst Container = styled.div`\n  width: 100vw;\n  flex: 1;\n\n  padding: 1rem 2rem;\n  box-sizing: border-box;\n\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  flex-wrap: wrap;\n\n  @media (max-width: 690px) {\n    flex-direction: column;\n  }\n`\n\nconst Image = styled.img`\n  width: 30rem;\n\n  @media (max-width: 690px) {\n    display: none;\n  }\n`\n\nconst StackWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  flex: 1;\n`\n\nconst Stack = styled.span`\n  word-wrap: break-word;\n  word-break: keep-all;\n  font-size: 5rem;\n  align-items: center;\n  font-weight: lighter;\n`\n\nconst Description = styled.span`\n  word-wrap: break-word;\n  word-break: keep-all;\n  margin-top: 19px;\n  font-size: 1.5rem;\n  line-height: 40px;\n  font-weight: lighter;\n  align-items: center;\n`\n\nconst Pagination = styled.div`\n  @media (max-width: 690px) {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    flex: 1;\n  }\n\n  @media (min-width: 690px) {\n    position: absolute;\n    bottom: 50px;\n    flex: 1;\n    display: flex;\n  }\n\n  button:first-child {\n    margin-right: 20px;\n  }\n`\n\nexport default Stacks\n","import React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport styled from 'styled-components'\n\nimport Navbar from './components/Navbar'\n\n/** Routes */\nimport Home from './pages/Home'\nimport Products from './pages/Products'\nimport Stacks from './pages/Stacks'\n\nimport './css/reset.css'\nimport './css/fonts.css'\nimport './css/global.css'\nimport './css/normalize.css'\n\ndocument.title = 'JnJ 2020'\n\nclass App extends React.Component {\n  render () {\n    return (\n      <FlexContainer>\n        <Router>\n          <Navbar />\n          <Route exact path=\"/\" component={Home} />\n          <Route path=\"/stacks\" component={Stacks} />\n          <Route path=\"/products\" component={Products} />\n        </Router>\n      </FlexContainer>\n    )\n  }\n}\n\nconst FlexContainer = styled.div`\n  display: flex;\n  width: 100vw;\n  min-height: 100vh;\n  flex-direction: column;\n`\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}